# Generated by vc2mak. (c) 2012 simon<senoutouya@gmail.com>.
# Project - Core

# 缺省配置
ifndef CFG
	CFG=Debug
endif

# 编译器标记（若要做x86、x64的cross-compile请指定PLAT参数）
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
PLAT += -pthread
PLATLIBS += -lm -ldl -lrt
endif

ifeq ($(UNAME), Solaris)
PLAT += -pthreads
PLATLIBS += -L/usr/local/lib -lz -liconv -lm -lrt
endif

ifeq ($(UNAME), FreeBSD)
PLAT += -pthread -I/usr/local/include
PLATLIBS += -L/usr/local/lib -lz -liconv -lm -lrt
endif

CC=gcc
CFLAGS=$(PLAT)
CXX=g++
CXXFLAGS=$(CFLAGS)
LD=$(CXX)
LDFLAGS:=$(CFLAGS)
AR=ar
ARFLAGS=rcs

# 工程配置表
ifeq "$(CFG)" "Debug"
	CFLAGS+= -pipe -fno-pic -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O0 -fexceptions -g -fstack-protector    -D_DEBUG -DSCRIPT_BINDK -DCORE_EXPORTS -I../../Include/Core/ -I../../Include -I../../../3rd/lua-5.1.4/src -I.
	LDFLAGS+= -map$(TargetDir)$(TargetName).map -shared -shared-libgcc
	LIBS=-Wl,-rpath,'$$ORIGIN' -Wl,--start-group ../../../3rd/lua-5.1.4/src/liblua.a -lmysqlclient -Wl,--end-group $(PLATLIBS)
	TARGET=../../../sourcecode/product/libcoreD.a
	VC_CONF_TYPE=typeStaticLibrary
endif

.PHONY: all
all: $(TARGET)

ifndef TARGET
	@echo "无编译目标！unrecognized \$$CFG '$(CFG)'"
	@exit 1
endif

%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
%.o: %.cc
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cxx
	$(CXX) $(CXXFLAGS) -o $@ -c $<

CORE.VCPROJ= \
	./Core.rc \
	./resource.h \
	./stdafx.cpp 

CRYPTO= \
	./Crypto/CRC32.c \
	./Crypto/easycrypt.c \
	./Crypto/easycrypt.h \
	./Crypto/EncodeDecode.cpp \
	../../Include/Core/EncodeDecode.h \
	../../Include/Misc/md5.h \
	./Crypto/my_md5.c \
	./Crypto/my_md5.h \
	../../Include/Misc/PassGen.h 

FILE= \
	./File/AloneFile.cpp \
	./File/AloneFile.h \
	./File/File.cpp \
	../../Include/Core/File.h \
	./File/FilePath.cpp \
	../../Include/Core/FileType.h \
	./File/IniFile.cpp \
	./File/IniFile.h \
	./File/IniFile2.cpp \
	./File/IniFile2.h \
	../../Include/Core/QFile.h \
	../../Include/Core/QIniFile.h \
	./File/QLogFile.cpp \
	../../Include/Core/QLogFile.h \
	../../Include/Core/QTabFile.h \
	../../Include/Core/QTabFileCtrl.h \
	./File/TabFile.cpp \
	./File/TabFile.h \
	./File/TabFileWritable.cpp \
	./File/TabFileWritable.h 

MISC= \
	./Misc/Debug.cpp \
	../../Include/Misc/IDatabase.h \
	../../Include/Core/Interlocked.h \
	./Misc/IpMacAddress.cpp \
	../../Include/Core/IpMacAddress.h \
	../../Include/Misc/Misc.h \
	./Misc/MSUnknown.cpp \
	../../Include/Misc/MSUnknown.h \
	../../Include/Misc/namefilter_i.h \
	../../Include/Misc/objectpool.h \
	./Misc/objevent.cpp \
	../../Include/Misc/objevent.h \
	./Misc/qconsolereader.cpp \
	../../Include/Misc/qconsolereader.h \
	./Misc/QGUID.cpp \
	../../Include/Core/QGUID.h \
	./Misc/qidpool.cpp \
	../../Include/Misc/qidpool.h \
	./Misc/qindexlist.cpp \
	../../Include/Misc/qindexlist.h \
	../../Include/Core/QLinkArray.h \
	../../Include/Core/QList.h \
	../../Include/Core/QLock.h \
	./Misc/QLog.cpp \
	../../Include/Core/QLog.h \
	./Misc/qnamefilter.cpp \
	../../Include/Core/QNode.h \
	./Misc/QTime.cpp \
	../../Include/Core/QTime.h \
	./Misc/Random.cpp \
	../../Include/Core/Random.h \
	../../Include/Misc/randomgen.h \
	../../Include/Misc/traverse_dir.h \
	../../Include/Misc/utilities.h \
	../../Include/Misc/xml_i.h 

MISC.XML= \
	./Misc/xml/tinystr.cpp \
	./Misc/xml/tinystr.h \
	./Misc/xml/tinyxml.cpp \
	./Misc/xml/tinyxml.h \
	./Misc/xml/tinyxmlerror.cpp \
	./Misc/xml/tinyxmlparser.cpp \
	./Misc/xml/xmldocument.cpp \
	./Misc/xml/xmldocument.h 

LUA= \
	./Lua/luna.cpp \
	../../Include/Core/luna.h \
	./Lua/QLuaScript.cpp \
	../../Include/Core/QLuaScript.h \
	./Lua/QLuaScriptGroup.cpp \
	../../Include/Core/QLuaScriptGroup.h \
	./Lua/QLuaScriptSet.cpp \
	../../Include/Core/QLuaScriptSet.h 

NETWORK= \
	./Network/QSocket.cpp \
	../../Include/Network/QSocket.h \
	./Network/QSocketPack.cpp \
	../../Include/Network/QSocketPack.h \
	./Network/SocketCryptKey.h 

COMMON= \
	../../Include/CommonDefine.h \
	../../Include/Core.h \
	../../Include/Core/CoreDeclspec.h \
	./CorePrivate.h 

RUNTIME= \
	../../Include/Runtime/Debug.h \
	../../Include/Runtime/TypeDef.h \
	./Runtime/QMemory.cpp \
	../../Include/Core/QMemory.h \
	./Runtime/QStrBase.cpp \
	../../Include/Core/QStrBase.h \
	./Runtime/qstring.cpp \
	../../Include/Runtime/qstring.h \
	./Runtime/QThread.cpp \
	../../Include/Core/QThread.h \
	../../Include/Runtime/Stddef.h 

SRCS=$(CORE.VCPROJ) $(CRYPTO) $(FILE) $(MISC) $(MISC.XML) $(LUA) $(NETWORK) $(COMMON) $(RUNTIME) 

OBJS=$(patsubst %.cxx,%.o,$(patsubst %.cpp,%.o,$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(filter %.c %.cc %.cpp %.cxx,$(SRCS))))))

ifeq "$(VC_CONF_TYPE)" "typeDynamicLibrary"
$(TARGET): $(OBJS)
	mkdir -p "$(dir $(TARGET))"
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
endif
ifeq "$(VC_CONF_TYPE)" "typeStaticLibrary"
$(TARGET): $(OBJS)
	mkdir -p "$(dir $(TARGET))"
	$(AR) $(ARFLAGS) $@ $(OBJS)
endif

.PHONY: clean
clean:
	-rm -f $(OBJS) Core.dep  ../../../sourcecode/product/libcoreD.so

.PHONY: depends
depends:
	-$(CXX) $(CXXFLAGS) -MM $(filter %.c %.cc %.cpp %.cxx,$(SRCS)) > Core.dep

-include Core.dep
