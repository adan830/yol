# Generated by vc2mak. (c) 2010-2013 Simon<senoutouya@gmail.com>.
# Project - KG_CSLogServer

# 缺省配置
ifndef CFG
	CFG=Debug
endif

# 编译器标记（若要做x86、x64的cross-compile请指定PLAT参数）
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
	CFLAGS	= -pthread $(PLAT)
	LDFLAGS	:=$(CFLAGS)
	PLATLIBS	+= -lm -ldl -lrt $(PLATLIB)
endif

ifeq ($(UNAME), Solaris)
	CFLAGS	= -pthreads -I/usr/local/include $(PLAT)
	LDFLAGS	:=$(CFLAGS) -L/usr/local/lib
	PLATLIBS	+= -lz -liconv -lm -lrt $(PLATLIB)
endif

ifeq ($(UNAME), FreeBSD)
	CFLAGS	= -pthread -I/usr/local/include $(PLAT)
	LDFLAGS	:=$(CFLAGS) -L/usr/local/lib
	PLATLIBS	+= $(PLATLIB)
endif

CC=gcc
CXX=g++
CXXFLAGS=$(CFLAGS)
LD=$(CXX)
AR=ar
ARFLAGS=rcs

# 工程配置表
ifeq "$(CFG)" "Debug"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O0 -fexceptions -g -fstack-protector  -D_DEBUG -D_CONSOLE -I../../Include -I../../../DevEnv/Include -I/usr/include/mysql
	LDFLAGS+= -L../../Lib -L../../../DevEnv/Lib -L/usr/lib64/mysql  -L../../../sourcecode/product/
	LIBS=-lcoreD  -lmysqlclient -lz $(PLATLIBS)
	TARGET=../../../sourcecode/product/logserverd.elf
	TARGET_TYPE=typeApplication
endif

ifeq "$(CFG)" "Release"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O2 -fexceptions -g -fstack-protector  -DNDEBUG -D_CONSOLE -I../../../Include -I../../../../DevEnv/Include -I/usr/include/mysql
	LDFLAGS+= -L../../../Lib -L../../../../DevEnv/Lib/Release
	LIBS=-Wl,-rpath,'$$ORIGIN' -Wl,--start-group -lEngine -lCommon   -lmysql -Wl,--end-group $(PLATLIBS)
	TARGET=Release/LogServer.elf
	TARGET_TYPE=typeApplication
endif

.PHONY: all
all: $(TARGET)

ifndef TARGET
	@echo "无编译目标！unrecognized \$$CFG '$(CFG)'"
	@exit 1
endif

%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
%.o: %.cc
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cxx
	$(CXX) $(CXXFLAGS) -o $@ -c $<

LOGSERVER.VCPROJ= \
	./KG_CSLogServer.ini \
	./KG_CSLogServer.prj 

SOURCE_FILES= \
	./KG_Database.cpp \
	./KG_LogThread.cpp \
	./KG_MicroTimer.cpp \
	./KG_SocketThread.cpp \
	./LogServer.cpp \
	./stdafx.cpp 

HEADER_FILES= \
	./KG_Database.h \
	./KG_LogThread.h \
	./KG_MicroTimer.h \
	./KG_Queue.h \
	./KG_SocketThread.h \
	./LogServer.h \
	./PassGen.h \
	./stdafx.h 

PROTOCOL= \
	../../../Include/Protocol/KG_CSLogServerProtocal.h 

SRCS=$(LOGSERVER.VCPROJ) $(SOURCE_FILES) $(HEADER_FILES) $(PROTOCOL) 

OBJS=$(patsubst %.cxx,%.o,$(patsubst %.cpp,%.o,$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(filter %.c %.cc %.cpp %.cxx,$(SRCS))))))

ifeq "$(TARGET_TYPE)" "typeApplication"
$(TARGET): $(OBJS)
	mkdir -p "$(dir $(TARGET))"
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
endif

.PHONY: clean
clean:
	-rm -f $(OBJS) KG_CSLogServer.dep  ../../../sourcecode/product/logserverd.elf

.PHONY: depends
depends:
	-$(CXX) $(CXXFLAGS) -MM $(filter %.c %.cc %.cpp %.cxx,$(SRCS)) > KG_CSLogServer.dep

-include KG_CSLogServer.dep

