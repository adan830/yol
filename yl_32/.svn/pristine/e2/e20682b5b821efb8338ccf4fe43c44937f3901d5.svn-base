# Generated by vc2mak. (c) 2012 simon<senoutouya@gmail.com>.
# Project - nsworld

# 缺省配置
ifndef CFG
	CFG=gameserver_debug
endif

# 编译器标记（若要做x86、x64的cross-compile请指定PLAT参数）
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
CFLAGS = -pthread $(PLAT)
LDFLAGS:=$(CFLAGS)
PLATLIBS += -lm -ldl -lrt $(PLATLIB)
endif

ifeq ($(UNAME), Solaris)
CFLAGS = -pthreads -I/usr/local/include $(PLAT)
LDFLAGS:=$(CFLAGS) -L/usr/local/lib
PLATLIBS += -lz -liconv -lm -lrt $(PLATLIB)
endif

ifeq ($(UNAME), FreeBSD)
CFLAGS = -pthread -I/usr/local/include $(PLAT)
LDFLAGS:=$(CFLAGS) -L/usr/local/lib
PLATLIBS += -lz -liconv -lm -lrt $(PLATLIB)
endif

CC=gcc
CXX=g++
CXXFLAGS=$(CFLAGS)
LD=$(CXX)
AR=ar
ARFLAGS=rcs

# 工程配置表
ifeq "$(CFG)" "gameserver_debug"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O0 -fexceptions -g -fstack-protector  -D_DEBUG  -DGAME_SERVER -I. -I../../include -I../../../LibQrt/Include -I../../../devenv/include
	TARGET=../../lib/debug/libyolext_serverd.a
	VC_CONF_TYPE=typeStaticLibrary
endif

ifeq "$(CFG)" "client_debug"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O0 -fexceptions -g -fstack-protector  -DNDEBUG -DGAME_SERVER -DKD_OP_GAME_CLIENT -DKD_USE_JXEX_UNIFY -I. -I../../include -I../../../LibQrt/Include -I../../../base/include -I../../../devenv/include
	TARGET=../../lib/debug/libyolext_clientd.a
	VC_CONF_TYPE=typeStaticLibrary
endif

ifeq "$(CFG)" "client_release"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O2 -fexceptions -g -fstack-protector  -DNDEBUG -DGAME_SERVER -DKD_OP_GAME_CLIENT -DKD_USE_JXEX_UNIFY -I. -I../../include -I../../../LibQrt/Include -I../../../base/include -I../../../devenv/include
	TARGET=../../lib/release/libyolext_client.a
	VC_CONF_TYPE=typeStaticLibrary
endif

ifeq "$(CFG)" "gameserver_release"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O2 -fexceptions -g -fstack-protector  -DNDEBUG -DGAME_SERVER -DKD_OP_GAME_SERVER -DKD_USE_JXEX_UNIFY -I. -I../../include -I../../../LibQrt/Include -I../../../base/include -I../../../devenv/include
	TARGET=../../lib/release/libyolext_server.a
	VC_CONF_TYPE=typeStaticLibrary
endif

.PHONY: all
all: $(TARGET)

ifndef TARGET
	@echo "无编译目标！unrecognized \$$CFG '$(CFG)'"
	@exit 1
endif

%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
%.o: %.cc
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cxx
	$(CXX) $(CXXFLAGS) -o $@ -c $<

其他= \
	./stdafx.h 

1.CHARACTER处理= \
	./kcharacterhelper.cpp \
	./kcharacterhelper.h \
	./kcharacterscript.cpp \
	./kcharactervarchange_gs.cpp 

2.PLAYER处理= \
	./kprotocolfilterdoing.cpp 

3.NPC处理= \
	./knpchelper.cpp \
	./knpchelper.h 

4.综合处理= \
	./knsbaserequire.cpp 

SRCS=$(其他) $(1.CHARACTER处理) $(2.PLAYER处理) $(3.NPC处理) $(4.综合处理) 

OBJS=$(patsubst %.cxx,%.o,$(patsubst %.cpp,%.o,$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(filter %.c %.cc %.cpp %.cxx,$(SRCS))))))

ifeq "$(VC_CONF_TYPE)" "typeStaticLibrary"
$(TARGET): $(OBJS)
	mkdir -p "$(dir $(TARGET))"
	$(AR) $(ARFLAGS) $@ $(OBJS)
endif

.PHONY: clean
clean:
	-rm -f $(OBJS) nsworld.dep  ../../lib/debug/libyolext_serverd.a ../../lib/debug/libyolext_clientd.a ../../lib/release/libyolext_client.a ../../lib/release/libyolext_server.a

.PHONY: depends
depends:
	-$(CXX) $(CXXFLAGS) -MM $(filter %.c %.cc %.cpp %.cxx,$(SRCS)) > nsworld.dep

-include nsworld.dep

