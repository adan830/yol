# Generated by vc2mak. (c) 2012 simon<senoutouya@gmail.com>.
# Project - gateway

# 缺省配置
ifndef CFG
	CFG=debug
endif

# 编译器标记（若要做x86、x64的cross-compile请指定PLAT参数）
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
CFLAGS = -pthread $(PLAT)
LDFLAGS:=$(CFLAGS)
PLATLIBS += -lm -ldl -lrt $(PLATLIB)
endif

ifeq ($(UNAME), Solaris)
CFLAGS = -pthreads -I/usr/local/include $(PLAT)
LDFLAGS:=$(CFLAGS) -L/usr/local/lib
PLATLIBS += -lz -liconv -lm -lrt $(PLATLIB)
endif

ifeq ($(UNAME), FreeBSD)
CFLAGS = -pthread -I/usr/local/include $(PLAT)
LDFLAGS:=$(CFLAGS) -L/usr/local/lib
PLATLIBS += -lz -liconv -lm -lrt $(PLATLIB)
endif

CC=gcc
CXX=g++
CXXFLAGS=$(CFLAGS)
LD=$(CXX)
AR=ar
ARFLAGS=rcs

# 工程配置表
ifeq "$(CFG)" "debug"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O0 -fexceptions -g -fstack-protector  -D_DEBUG -D_CONSOLE -I. -I../../include -I../../include/serverbase -I../../../LibQrt/Include -I../../../DevEnv/include
	LDFLAGS+= -L../../lib/debug -L../../../LibQrt/Lib/ -L../../../DevEnv/lib/debug -L../../product/
	LIBS=-Wl,-rpath,'$$ORIGIN' -Wl,--start-group -lcoreD -lldap -Wl,--end-group $(PLATLIBS)
	TARGET=../../product/gatewayd.elf
	VC_CONF_TYPE=typeApplication
endif

ifeq "$(CFG)" "release"
	CFLAGS+= -pipe -Wall -Wno-unknown-pragmas -Wno-unused -Wno-reorder -O2 -fexceptions -g -fstack-protector  -DNDEBUG -D_CONSOLE -I. -I../../include -I../../include/serverbase -I../../../base/include -I../../../DevEnv/include
	LDFLAGS+= -L../../lib/release -L../../../base/lib/release -L../../../DevEnv/lib/release
	LIBS=-Wl,-rpath,'$$ORIGIN' -Wl,--start-group -lengine -lcommon -lldap -Wl,--end-group $(PLATLIBS)
	TARGET=../../product/release/gateway/gateway.elf
	VC_CONF_TYPE=typeApplication
endif

.PHONY: all
all: $(TARGET)

ifndef TARGET
	@echo "无编译目标！unrecognized \$$CFG '$(CFG)'"
	@exit 1
endif

%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
%.o: %.cc
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<
%.o: %.cxx
	$(CXX) $(CXXFLAGS) -o $@ -c $<

SOURCE_FILES= \
	./Gateway.cpp \
	./KGatewayEyes.cpp \
	./kldapclient.cpp \
	./KPaysysAgency.cpp \
	./KPlayerManager.cpp \
	./KQueueManager.cpp \
	./KRelayAgency.cpp \
	./KSndaAgency.cpp \
	./UnityPolicyServer.cpp 

HEADER_FILES= \
	./Gateway.h \
	./KGatewayEyes.h \
	./kldapclient.h \
	./KPaysysAgency.h \
	./KPlayerManager.h \
	./KQueueManager.h \
	./KRelayAgency.h \
	./KSndaAgency.h \
	./UnityPolicyServer.h 

AFX= \
	./Gateway.rc \
	./Main.cpp \
	./resource.h \
	./stdafx.cpp \
	./stdafx.h 

PROTOCOL= \
	../../include/serverbase/protocol/GatewayClientProtocol.h \
	../../include/serverbase/protocol/GatewayDef.h \
	../../include/serverbase/protocol/GatewayRelayProtocol.h 

SRCS=$(SOURCE_FILES) $(HEADER_FILES) $(AFX) $(PROTOCOL) 

OBJS=$(patsubst %.cxx,%.o,$(patsubst %.cpp,%.o,$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(filter %.c %.cc %.cpp %.cxx,$(SRCS))))))

ifeq "$(VC_CONF_TYPE)" "typeApplication"
$(TARGET): $(OBJS)
	mkdir -p "$(dir $(TARGET))"
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
endif

.PHONY: clean
clean:
	-rm -f $(OBJS) gateway.dep  ../../product/gatewayd.elf

.PHONY: depends
depends:
	-$(CXX) $(CXXFLAGS) -MM $(filter %.c %.cc %.cpp %.cxx,$(SRCS)) > gateway.dep

-include gateway.dep

